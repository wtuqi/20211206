@model Integral_exchange.Models.Achievement

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <script src="~/Scripts/Selector.js"></script>
}

<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Achievement</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", id = "UserID" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AchievementID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AchievementID, new { htmlAttributes = new { @class = "form-control", id = "AchievementID1" } })
                @Html.ValidationMessageFor(model => model.AchievementID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AchievementName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* @Html.EditorFor(model => model.community, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.AchievementName, ViewBag.List as SelectList, "SelectList", new { @style = "width:38%;height:33px;border-radius:5px;font-size: 1.2em;", id = "sel1" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AchieveTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AchieveTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AchieveTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}


<div>
    <a href="@Url.Action("Index", "Achievements", new { })" class="label label-primary" style="font-size:13px"> Back to List  </a>
</div>
<script type="text/javascript">
    $(function () {
        var u = '@System.Web.HttpContext.Current.User.Identity.Name.ToString()';
        if (u != 'admin') {
            $("#UserID").val(u);
            $("#UserID").attr("disabled", true);
        }
    })
</script>
